@mixin css-triangle($size, $border-width, $border-color, $position, $bg: #fff, $parent-pos: relative) {
    position: $parent-pos;
    background: $bg;
    border: $border-width solid $border-color;

    $d: top;
    $margin: left;

    @if $position == top {
        $d: bottom;
    } @else if $position == bottom {
        $d: top;
    } @else if $position == left {
        $d: right;
    } @else {
        $d: left;
    }

    @if $position == top or $position == bottom {
        $margin: left;
    } @else {
        $margin: top;
    }

    &:after,
    &:before {
        #{$d}: 100%;
        border: solid transparent;
        content: ' ';
        width: 0;
        height: 0;
        position: absolute;
        pointer-events: none;
    }

    &:after {
        border-color: rgba(119, 100, 213, 0);
        border-#{$d}-color: $bg;
        border-width: $size;
        #{$margin}: 50%;
        margin-#{$margin}: -$size;
        z-index: 3;
    }

    &:before {
        border-color: rgba(194, 225, 245, 0);
        border-#{$d}-color: $border-color;
        border-width: $size + (round($border-width*1.41421356));
        #{$margin}: 50%;
        margin-#{$margin}: -($size + (round($border-width*1.41421356)));
        z-index: 2;
    }
}

@mixin radial-progress($circle-size, $inset-size, $circle-background, $circle-color, $inset-color) {
    background: $circle-background;
    width: $circle-size;
    height: $circle-size;

    .circle {
        .mask,
        .fill {
            width: $circle-size;
            height: $circle-size;
        }

        .mask {
            clip: rect(0, $circle-size, $circle-size, $circle-size/2);

            .fill {
                clip: rect(0, $circle-size/2, $circle-size, 0);
                background: $circle-color;
            }
        }
    }

    .inset {
        width: $inset-size;
        height: $inset-size;
        background: $inset-color;
        margin-left: ($circle-size - $inset-size)/2;
        margin-top: ($circle-size - $inset-size)/2;
    }
}
